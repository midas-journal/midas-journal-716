// .NAME vtkVoodooReader - read a text file generated by Voodoo
// .SECTION Description

#ifndef __vtkVoodooReader_h
#define __vtkVoodooReader_h

#include "vtkCalibratedImageCollectionReader.h" //superclass
#include "vtkSmartPointer.h"

class vtkVoodooReader : public vtkCalibratedImageCollectionReader
{
public:
  vtkTypeRevisionMacro(vtkVoodooReader,vtkCalibratedImageCollectionReader);
  void PrintSelf(ostream& os, vtkIndent indent);

  static vtkVoodooReader *New();
  
  // Description:
  // Specify file name of the voodoo (txt) file.
  void SetFileName(vtkstd::string filename);
  vtkstd::string GetFileName();
  /*
  vtkSetMacro(FileName, vtkstd::string);
  vtkGetMacro(FileName, vtkstd::string);
  */
  
  // Description:
  // Specify the image directory
  void SetImageDirectory(vtkstd::string filename);
  vtkstd::string GetImageDirectory();
  /*
  vtkSetMacro(ImageDirectory, vtkstd::string);
  vtkGetMacro(ImageDirectory, vtkstd::string);
	*/
  vtkSmartPointer<vtkPolyData> GetPoints();
  vtkSmartPointer<vtkCalibratedImageCollection> GetCameras();
  
  enum ImageTypeEnum { JPG, PNG };
  
protected:
  vtkVoodooReader();
  ~vtkVoodooReader(){};
  
  int RequestData(vtkInformation *, vtkInformationVector **, vtkInformationVector *);

private:
  vtkVoodooReader(const vtkVoodooReader&);  // Not implemented.
  void operator=(const vtkVoodooReader&);  // Not implemented.
  
  vtkstd::string FileName;
  vtkstd::string ImageDirectory;
  
  vtkSmartPointer<vtkPolyData> Points;
  vtkSmartPointer<vtkCalibratedImageCollection> Cameras;
  
  ImageTypeEnum ImageType;
};

#endif
